/* ------------------- */
/* Custom properties   */
/* ------------------- */

:root {
   /* Colors */
   --clr-green: 174deg 38% 28%;
   --clr-yellow-pink: 21deg 72% 93%;
   --clr-light-gray: 150deg 17% 91%;
   --clr-hard-green: 180deg 4% 28%;
   --clr-black: 0deg 0% 0%;
   --clr-white: 0deg 0% 100%;

   /* font sizes */ 
   //  mobile
   --fs-800: 2.7rem; // 54px
   --fs-700: #{"clamp(1.5rem, 3.5vw + .5rem, 2.375rem)"}; // 38px 
   --fs-600: 2rem; // 32px
   --fs-500: 1.75rem; // 28px 
   --fs-400: 1.25rem; // 20px 
   --fs-300: 1.1875rem; // 19px 
   --fs-200: 2.25rem; // 36px

   // desktop
   @media (min-width: 36em) {
      --fs-200: 1rem; 
   }
   @media (min-width: 48em) {
      --fs-800: 3.94rem; // 63px      
   }

   /* font-families */
   --ff-alegerya: "Alegreya Sans", sans-serif;
   --ff-cedarville: "Cedarville Cursive", cursive;
   --ff-Josefin: "Josefin Sans", sans-serif;
   --ff-George: "George Rounded", sans-serif;
   
   /* letter spacing */ 
   --lt-2: 0.001em;
   --lt-1: 0.02em;
   
}
/* ------------------- */
/* reset classes   */
/* ------------------- */

html {
   scroll-behavior: smooth;
   overflow-y: hidden;
}
*,
*::before,
*::after {
   box-sizing: border-box;
   margin: 0;
   padding: 0;
}
a {
   display: block;
   text-decoration: none;
}

ul {
   list-style: none;
}

svg {
   display: block;
   margin: auto;
}

button {
   color: #{"hsl(var(--clr-white))"};
   cursor: pointer;
   border: 0;
   background-color: initial;
}

picture {
   display: block;
}
figure {
   margin: 0;
}

:not(img)::selection {
   background-color: #{"hsl(var(--clr-yellow-pink))"};
   color: #{"hsl(var(--clr-black))"};
}
:is(.contact, .footer) *::selection {
   background-color: #{"hsl(var(--clr-white))"};
   color: #{"hsl(var(--clr-black))"};
}
img::selection {
   background-color: transparent;
}

*:focus-visible {
   outline-offset: 3px;
}
/* 
   the default weaight for headings is bold && we want it to be normal 
*/
h1,
h2,
h3,
h4,
h5,
h6,
p {
   font-weight: 400;
}
/* set up the body */
body {
   // we choose the font family and size and bg and the color for the Body text because it will repeat a lot.
   font-family: var(--ff-alegerya);
   font-size: var(--fs-300);
   color: #{"hsl( var(--clr-green) )"};
   position: relative ;
   overflow-x: hidden;
   
   @media (min-width: 48em) {
      color: #{"hsl( var(--clr-hard-green) )"};
   }
}

p {
   line-height: 1.5;
}
/* make images easier to work with */
img,
picutre {
   max-width: 100%;
   display: block;
}

/* make form elements easier to work with */
input,
button,
textarea,
select {
   font: inherit;
}

/* remove animations for people who've turned them off */
@media (prefers-reduced-motion: reduce) {
   *,
   *::before,
   *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
   }
}

// Utility classes are classes tha have just one simple job to set flex or size o color just one job
/* ------------------- */
/* Utility classes     */
/* ------------------- */

.flex {
   display: flex;
   gap: var(--flex-gap, 1rem);
}

.grid {
   display: grid;
   gap: var(--grid-gap, 1rem);
}

.d-block {
   display: block;
}

.bold {
   font-weight: bold;
}

.flow > *:where(:not(:first-child)) {
   margin-top: var(--flow-space, 1rem);
}
$media-width: 
   ("media-Min-Width": 36em, "containerWidth": 33.75rem),
   ("media-Min-Width": 48em, "containerWidth": 45rem),
   ("media-Min-Width": 62em, "containerWidth": 60rem) ,
   ("media-Min-Width": 75em, "containerWidth": 71.25rem) 
;
.container {
   margin-inline: auto;

   @media (max-width: 35.99em) {
      padding-inline: 0.9375rem;
   }
   @each $meadiaInfo in $media-width {
      @media (min-width: map-get($meadiaInfo, "media-Min-Width")) {
         width: map-get($meadiaInfo, "containerWidth");
      }
   }
}

.headerContainer {
   margin-inline: auto;
   @media (max-width: 35.99em) {
      padding-inline: 0.9375rem;
   }
   @each $meadiaInfo in $media-width {
      @media (min-width: map-get($meadiaInfo, "media-Min-Width")) {
         width: map-get($meadiaInfo, "containerWidth") + 1.5;
      }
   }
}


// hide element for people who use screen reader
.sr-only {
   position: absolute;
   width: 1px;
   height: 1px;
   padding: 0;
   margin: -1px;
   overflow: hidden;
   clip: rect(0, 0, 0, 0);
   white-space: nowrap; 
   border: 0;
}

.skip-to-content {
   position: absolute;
   z-index: 9999;
   background: #{"hsl( var(--clr-white) )"};
   color: #{"hsl( var(--clr-dark) )"};
   padding: 0.5em 1em;
   transform: translateY(-100%);
   transition: transform 250ms ease-in;
   &:focus {
      transform: translateY(0);
   }
}

/* colors */

.bg-white {
   background-color: #{"hsl( var(--clr-white) )"};
}
.bg-lightPink {
   background-color: #{"hsl( var(--clr-yellow-pink) )"};
}
.bg-lightGray {
   background-color: #{"hsl( var(--clr-light-gray) )"};
}
.bg-green {
   background-color: #{"hsl( var(--clr-green) )"};
}


.text-white {
   color: #{"hsl( var(--clr-white) )"};
}

.text-dark {
   color: #{"hsl( var(--clr-black) )"};
}
.text-green {
   color: #{"hsl( var(--clr-green) )"};
}
.text-hardGreen {
   color: #{"hsl( var(--clr-hard-green) )"};
}



/* typography */

.ff-alegerya {
   font-family: var(--ff-alegerya);
}
.ff-cedarville {
   font-family: var(--ff-cedarville);
}
.ff-Josefin {
   font-family: var(--ff-Josefin);
}
.ff-George {
   font-family: var(--ff-George);
}

.lt-2 {
   letter-spacing: var(--lt-2);
}
.lt-1 {
   letter-spacing: var(--lt-1);
}


.fs-800 {
   font-size: var(--fs-800);
}
.fs-700 {
   font-size: var(--fs-700);
}
.fs-600 {
   font-size: var(--fs-600);
}
.fs-500 {
   font-size: var(--fs-500);
}
.fs-400 {
   font-size: var(--fs-400);
}
.fs-300 {
   font-size: var(--fs-300);
}
.fs-200 {
   font-size: var(--fs-200);
}

.fs-800,
.fs-700,
.fs-600 {
   line-height: 1.1;
}


// one components have many elemnets inside it so it is complex than utility class
/* ------------------- */
/* Component classes     */
/* ------------------- */
// we will convert INTERACTIVE ELEMENTS in our design systime to base components and also set our header

// svg

.github-corner {
   border-bottom: 0;
   position: fixed;
   right: 0;
   text-decoration: none;
   top: 0;
   z-index: 1;
   display: none;
   @media (min-width:36em) {
      display: block;
   }
}

.github-corner:hover .octo-arm {
   -webkit-animation: octocat-wave 560ms ease-in-out;
   animation: octocat-wave 560ms ease-in-out;
}
.github-corner svg {
   color: #fff;
   fill: black;
   height: 55px;
   width: 55px;
}

@keyframes octocat-wave {
   0%,
   100% {
      transform: rotate(0);
   }
   20%,
   60% {
      transform: rotate(-25deg);
   }
   40%,
   80% {
      transform: rotate(10deg);
   }
}

.CreaterLogo {
   position: absolute;
   bottom: 15px;
   right: 15px;
   width: 70px;
   z-index: 10000;
}

// order button

.orderButton {
   border-radius: 5px;
   width: 190px;
   height: 54px;
   display: grid;
   place-items: center;
   box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.1);
   transition: .3s ease-in-out;
   &:where(:hover, :focus) {
      box-shadow: none;
   }
   @media (min-width: 48em) {
      width: 235px;
   }
}

.sectionName {
   position: absolute;
   transform-origin: left top;
   width: max-content;
   line-height: 0.8;
   opacity: .75;
   top: 0;

   @media (max-width: 48rem) {
      display: none;
   }
   &.leftSide {
      left: 0;
      transform: rotate(-90deg) translateX(-80%);
   }
   &.rightSide {
      left: 100%;
      transform: rotate(-90deg) translateY(-100%) translateX(-80%);
   }
}

/* ------------------- */
/* scroll animation     */
/* ------------------- */


.hideSec {
   transform: translateY(9.5rem);
   opacity: 0;
}
.showSec {
   transform: translateY(0rem);
   opacity: 1;
}
.SectionTransition {
   transition: transform .8s ease-out, opacity .8s ease-out;
}